main(classname, imgdir, list) ::= <<


import java.io.File;
import org.sikuli.api.DesktopScreenRegion;
import org.sikuli.api.ImageTarget;
import org.sikuli.api.ScreenRegion;
import org.sikuli.api.Target;
import org.sikuli.api.robot.Mouse;
import org.sikuli.api.robot.Keyboard;
import org.sikuli.api.robot.desktop.DesktopMouse;
import org.sikuli.api.robot.desktop.DesktopKeyboard;

class $classname$ {

	// TODO: modify these settings if the default settings don't work for you
	public static int DEFAULT_WAIT_TIME = 5000;
	public static float DEFAULT_MINSCORE = 0.7f;
	
	// TODO: modify this path if you moved image files to another location
	public static String DEFAULT_IMAGE_DIRECTORY =  "$imgdir$";
	
	// This method executes all automatically generated steps	
	public void executeAll(){
		$list:step_invoke()$
		
		// TODO: Add code to handle the return value of each step
	}
	
	static public void main(String... args){
		$classname$ prog = new $classname$();
		prog.executeAll();
	} 
		
	public File findImageByName(String name){
		return new File(DEFAULT_IMAGE_DIRECTORY + File.pathSeparator + name);
	}
	
	//================================================================ 
	// BEGIN: Automation Steps
	//================================================================
	
	$list:step_def()$
	
	//================================================================ 
	// END: Automation Steps
	//================================================================
	


}
>>

step_def(x) ::= <<



// Source: Slide $x.number$ 
// Action: $x.actionName$
// Argument: $x.argument$
public boolean step$x.number$() {
    $(x.type)(x)$
}

>>


wait_target(x) ::= <<
Target target = new ImageTarget(findImageByName("$x.filename$"));
target.setMinScore(DEFAULT_MIN_SCORE);
ScreenRegion loc = screenRegion.wait(target, DEFAULT_WAIT_TIME);
>>

find_target(x) ::= <<
Target target = new ImageTarget(findImageByName("$x.filename$"));
target.setMinScore(DEFAULT_MIN_SCORE);
ScreenRegion loc = screenRegion.find(target);
>>


empty(x) ::= <<
	// no action is generated for this step
	return true;
>>

exist(x) ::= <<
	$find_target(x)$	
	return loc != null;

>>


notExist(x) ::= <<
	$find_target(x)$	
	return loc == null;
>>

targetAction(x) ::= <<
	$wait_target(x)$
	if (loc != null){
		$(x.actionName)(x.argument)$
		return true;
	}else{
		return false;
	}

>>

step_invoke(x) ::= << 
boolean success$x.number$ = step$x.number$();
>>



click(x) ::= "mouse.click(loc.getCenter());"
doubleClick(x) ::= "mouse.doubleClick(loc.getCenter());"
rightClick(x) ::= "mouse.rightClick(loc.getCenter());"
type(x) ::= <<
mouse.click(loc.getCenter());
keyboard.type("$x$");
>>